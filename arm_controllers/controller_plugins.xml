<library path="lib/libarm_controllers">

  <class name="arm_controllers/TimeDelayController" type="arm_controllers::TimeDelayController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Time Delay Controller
    </description>
  </class>

  <class name="arm_controllers/GravityCompController" type="arm_controllers::GravityCompController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Gravity Compensation Controller
    </description>
  </class>

  <class name="arm_controllers/Computed_Torque_Controller" type="arm_controllers::Computed_Torque_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Computed Torque Controller
    </description>
  </class>

  <class name="arm_controllers/Computed_Torque_CLIK_Controller" type="arm_controllers::Computed_Torque_CLIK_Controller" base_class_type="controller_interface::ControllerBase">
    <description>
	    Computed Torque Controller with Closed Loop Inverse Kinematics
    </description>
  </class>

  <class name="arm_controllers/AdaptiveImpedanceController" type="arm_controllers::AdaptiveImpedanceController" base_class_type="controller_interface::ControllerBase">
    <description>
	    Adaptive Impedance Controller
    </description>
  </class>

  <class name="arm_controllers/PassivityController" type="arm_controllers::PassivityController" base_class_type="controller_interface::ControllerBase">
    <description>
      Passivity Based Controller
    </description>
  </class>

  <class name="arm_controllers/KinematicController" type="arm_controllers::KinematicController" base_class_type="controller_interface::ControllerBase">
    <description>
      Kinematic Controller
    </description>
  </class>

  <class name="arm_controllers/DynamicController" type="arm_controllers::DynamicController" base_class_type="controller_interface::ControllerBase">
    <description>
      Dynamic Controller
    </description>
  </class>

  <class name="arm_controllers/tstVel" type="arm_controllers::tstVel" base_class_type="controller_interface::ControllerBase">
    <description>
	    Test Controller Velocity type
    </description>
  </class>

  <class name="arm_controllers/tstSingleJoint" type="arm_controllers::tstSingleJoint" base_class_type="controller_interface::ControllerBase">
    <description>
	    Test Controller Single joint movement
    </description>
  </class>

  <class name="arm_controllers/TaskCon" type="arm_controllers::TaskCon" base_class_type="controller_interface::ControllerBase">
    <description>
	    Task Controller using full Inverse dynamics.
    </description>
  </class>

  <class name="arm_controllers/TaskConAlt" type="arm_controllers::TaskConAlt" base_class_type="controller_interface::ControllerBase">
    <description>
	    Task Controller alternative uses internal gains for torque cmds, has joint limits, check code for more info.
    </description>
  </class>

</library>

